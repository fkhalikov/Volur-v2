// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volur.Infrastructure.Persistence;

#nullable disable

namespace Volur.Infrastructure.Migrations
{
    [DbContext(typeof(VolurDbContext))]
    partial class VolurDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Volur.Domain.Entities.ExchangeEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OperatingMic")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("Exchanges", (string)null);
                });

            modelBuilder.Entity("Volur.Domain.Entities.NoDataAvailableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExchangeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("FailureCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstFailedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastAttemptedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastErrorMessage")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeCode");

                    b.HasIndex("Ticker", "ExchangeCode")
                        .IsUnique();

                    b.ToTable("NoDataAvailable", (string)null);
                });

            modelBuilder.Entity("Volur.Domain.Entities.StockFundamentalsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Beta")
                        .HasColumnType("float");

                    b.Property<double?>("BookValue")
                        .HasColumnType("float");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("CurrentRatio")
                        .HasColumnType("float");

                    b.Property<double?>("DebtToEquity")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DividendRate")
                        .HasColumnType("float");

                    b.Property<double?>("DividendYield")
                        .HasColumnType("float");

                    b.Property<double?>("EnterpriseToEbitda")
                        .HasColumnType("float");

                    b.Property<double?>("EnterpriseToRevenue")
                        .HasColumnType("float");

                    b.Property<double?>("EnterpriseValue")
                        .HasColumnType("float");

                    b.Property<double?>("FiftyTwoWeekHigh")
                        .HasColumnType("float");

                    b.Property<double?>("FiftyTwoWeekLow")
                        .HasColumnType("float");

                    b.Property<double?>("ForwardPE")
                        .HasColumnType("float");

                    b.Property<double?>("GrossMargins")
                        .HasColumnType("float");

                    b.Property<string>("Industry")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double?>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double?>("OperatingMargins")
                        .HasColumnType("float");

                    b.Property<double?>("PEG")
                        .HasColumnType("float");

                    b.Property<double?>("PayoutRatio")
                        .HasColumnType("float");

                    b.Property<double?>("PriceToBook")
                        .HasColumnType("float");

                    b.Property<double?>("PriceToBookValue")
                        .HasColumnType("float");

                    b.Property<double?>("PriceToSales")
                        .HasColumnType("float");

                    b.Property<double?>("ProfitMargins")
                        .HasColumnType("float");

                    b.Property<double?>("QuarterlyEarningsGrowth")
                        .HasColumnType("float");

                    b.Property<double?>("QuarterlyRevenueGrowth")
                        .HasColumnType("float");

                    b.Property<double?>("ReturnOnAssets")
                        .HasColumnType("float");

                    b.Property<double?>("ReturnOnEquity")
                        .HasColumnType("float");

                    b.Property<double?>("Revenue")
                        .HasColumnType("float");

                    b.Property<double?>("RevenuePerShare")
                        .HasColumnType("float");

                    b.Property<string>("Sector")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("TotalCash")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCashPerShare")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDebt")
                        .HasColumnType("float");

                    b.Property<double?>("TrailingPE")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("Ticker")
                        .IsUnique();

                    b.ToTable("StockFundamentals", (string)null);
                });

            modelBuilder.Entity("Volur.Domain.Entities.StockKeyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExchangeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Ticker", "ExchangeCode", "Key");

                    b.ToTable("StockKeyValues", (string)null);
                });

            modelBuilder.Entity("Volur.Domain.Entities.StockNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExchangeCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Ticker", "ExchangeCode");

                    b.ToTable("StockNotes", (string)null);
                });

            modelBuilder.Entity("Volur.Domain.Entities.StockQuoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AverageVolume")
                        .HasColumnType("float");

                    b.Property<double?>("Change")
                        .HasColumnType("float");

                    b.Property<double?>("ChangePercent")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("CurrentPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("High")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Low")
                        .HasColumnType("float");

                    b.Property<double?>("Open")
                        .HasColumnType("float");

                    b.Property<double?>("PreviousClose")
                        .HasColumnType("float");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Ticker")
                        .IsUnique();

                    b.ToTable("StockQuotes", (string)null);
                });

            modelBuilder.Entity("Volur.Domain.Entities.SymbolEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("ChangePercent")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("CurrentPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DividendYield")
                        .HasColumnType("float");

                    b.Property<string>("ExchangeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullSymbol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Industry")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Isin")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double?>("MarketCap")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ParentExchange")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sector")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("TrailingPE")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeCode");

                    b.HasIndex("FullSymbol")
                        .IsUnique();

                    b.HasIndex("ParentExchange");

                    b.HasIndex("Ticker");

                    b.HasIndex("Type");

                    b.ToTable("Symbols", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
